diff --git a/packages/app/src/main/java/cn/edu/nju/sicp/contests/hog/HogCompare.java b/packages/app/src/main/java/cn/edu/nju/sicp/contests/hog/HogCompare.java
index 1225612..f51018a 100644
--- a/packages/app/src/main/java/cn/edu/nju/sicp/contests/hog/HogCompare.java
+++ b/packages/app/src/main/java/cn/edu/nju/sicp/contests/hog/HogCompare.java
@@ -132,8 +132,7 @@ public class HogCompare implements Consumer<HogEntry> {
                 new HostConfig()
                     .withCpuPeriod(100000L)
                     .withCpuQuota(100000L)
-                    .withMemory(1024L * 1024 * 1024) // load scenarios require huge memory
-                    .withMemorySwappiness(0L))
+                    .withMemory(1024L * 1024 * 1024)) // load scenarios require huge memory
             .exec()
             .getId();
 
diff --git a/packages/app/src/main/java/cn/edu/nju/sicp/contests/hog/HogTrigger.java b/packages/app/src/main/java/cn/edu/nju/sicp/contests/hog/HogTrigger.java
index e3457e2..f68d5bf 100644
--- a/packages/app/src/main/java/cn/edu/nju/sicp/contests/hog/HogTrigger.java
+++ b/packages/app/src/main/java/cn/edu/nju/sicp/contests/hog/HogTrigger.java
@@ -125,8 +125,7 @@ public class HogTrigger implements Consumer<Submission> {
                 new HostConfig()
                     .withCpuPeriod(100000L)
                     .withCpuQuota(100000L)
-                    .withMemory(1024L * 1024 * 1024) // 1G RAM
-                    .withMemorySwappiness(0L))
+                    .withMemory(1024L * 1024 * 1024)) // 1G RAM
             .exec()
             .getId();
 
diff --git a/packages/app/src/main/java/cn/edu/nju/sicp/listeners/GradeSubmissionListener.java b/packages/app/src/main/java/cn/edu/nju/sicp/listeners/GradeSubmissionListener.java
index 192327a..85696d6 100644
--- a/packages/app/src/main/java/cn/edu/nju/sicp/listeners/GradeSubmissionListener.java
+++ b/packages/app/src/main/java/cn/edu/nju/sicp/listeners/GradeSubmissionListener.java
@@ -166,8 +166,7 @@ public class GradeSubmissionListener implements ChannelAwareMessageListener {
                     .withHostConfig(new HostConfig()
                             .withCpuPeriod(100000L)
                             .withCpuQuota(100000L)
-                            .withMemory(256L * 1024 * 1024)
-                            .withMemorySwappiness(0L))
+                            .withMemory(256L * 1024 * 1024))
                     .exec()
                     .getId();
             logStopWatch.accept(String.format("Created Docker container.\n   ID: %s\n   RF: %s\n",
