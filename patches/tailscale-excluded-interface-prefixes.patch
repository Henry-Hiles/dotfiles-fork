diff --git a/net/interfaces/interfaces.go b/net/interfaces/interfaces.go
index 6fe24c65..1fc9fc4b 100644
--- a/net/interfaces/interfaces.go
+++ b/net/interfaces/interfaces.go
@@ -10,6 +10,7 @@
 	"net"
 	"net/http"
 	"net/netip"
+	"os"
 	"runtime"
 	"slices"
 	"sort"
@@ -40,6 +41,19 @@ func isProblematicInterface(nif *net.Interface) bool {
 	return false
 }
 
+var excluded_prefixes = strings.Fields(os.Getenv("TS_EXCLUDED_INTERFACE_PREFIXES"))
+
+func isExcludedInterface(nif *net.Interface) bool {
+	name := nif.Name
+	for _, prefix := range excluded_prefixes {
+		if strings.HasPrefix(name, prefix) {
+			fmt.Printf("exclude interface %s\n", name)
+			return true
+		}
+	}
+	return false
+}
+
 // LocalAddresses returns the machine's IP addresses, separated by
 // whether they're loopback addresses. If there are no regular addresses
 // it will return any IPv4 linklocal or IPv6 unique local addresses because we
@@ -53,7 +67,7 @@ func LocalAddresses() (regular, loopback []netip.Addr, err error) {
 	var regular4, regular6, linklocal4, ula6 []netip.Addr
 	for _, iface := range ifaces {
 		stdIf := iface.Interface
-		if !isUp(stdIf) || isProblematicInterface(stdIf) {
+		if !isUp(stdIf) || isProblematicInterface(stdIf) || isExcludedInterface(stdIf) {
 			// Skip down interfaces and ones that are
 			// problematic that we don't want to try to
 			// send Tailscale traffic over.
